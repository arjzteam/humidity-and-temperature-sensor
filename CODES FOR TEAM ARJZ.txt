//OFFICIAL CODES FOR TEAM ARJZ 

#include <SoftwareSerial.h>
SoftwareSerial sim(10, 11);
int _timeout;
String _buffer;
String number = "+639455160728"; 


//TO INCLUDE HUMIDITY CODES


#include "DHT.h"
#define DHTPIN 2

#define DHTTYPE DHT11 

DHT dht(DHTPIN, DHTTYPE);


// TO INCLUDE GPS CODES



#include <SoftwareSerial.h>
#include <TinyGPS++.h>
SoftwareSerial gpsSerial(8,9);
TinyGPSPlus gps;
float lattitude,longitude;



//START OF VOID SETUP



void setup() {
  
  delay(7000); 
  Serial.begin(9600);



  //TO BEGIN SENDING MESSAGE
  
  _buffer.reserve(50);
  Serial.println("System Started...");
  sim.begin(9600);
  delay(1000);
  Serial.println("Type s to request data");


  
  // TO BEGIN HUMIDITY TEST
  
  delay(7000);
  Serial.println("Humidity and Temperature Test!");
  dht.begin();





  // TO BEGIN GPS LOCATION DATA
  //

  //just delay
  delay(7000);
  gpsSerial.begin(9600);
  Serial.begin(9600);
 

  
}
//END OF VOID SETUP


//START OF VOIDLOOP


void loop() {
  if (Serial.available() > 0)
    switch (Serial.read())
    {
      case 's':
        SendMessage();
        break;
     
    }
  if (sim.available() > 0)
    Serial.write(sim.read());


// for gathering data of humidity and temp


   delay(2000); 
   int h = dht.readHumidity();
  
   int t = dht.readTemperature();
 
   if (isnan(h) || isnan(t) ) 
   {
      Serial.println("Failed to read from DHT sensor!");
      return;
   }


 
   Serial.print (" \n");
   Serial.print ("Humidity: ");
   Serial.print (h);
   Serial.print (" %\n");
   Serial.print ("Temperature: ");
   Serial.print (t);
   Serial.print (" *C ");


// END PRINTING HUMIDITY DATA




// START OF PRINTING GPS DATA



   while (gpsSerial.available())
  {
    
    int data = gpsSerial.read();
    if (gps.encode(data))
    {
      lattitude = (gps.location.lat());
      longitude = (gps.location.lng());
      Serial.print (" \n");
      Serial.print (" \n");
      Serial.print ("lattitude: ");
      Serial.println (lattitude);
      Serial.print ("longitude: ");
      Serial.println (longitude);
    }
  }


// END OF VOID LOOP
}





//for sending sms gamit ang gsm module

void SendMessage()
{


//para sa humidity and temperature

   delay(2000); 
   int h = dht.readHumidity();
   
   int t = dht.readTemperature();

//para sa GPS reading
 
 
  
   int data = gpsSerial.read();
    if (gps.encode(data))
    {
      lattitude = (gps.location.lat());
      longitude = (gps.location.lng());
      Serial.print (" \n");
      Serial.print (" \n");
      Serial.print ("lattitude: ");
      Serial.println (lattitude);
      Serial.print ("longitude: ");
      Serial.println (longitude);
    }
  

  
  //Serial.println ("Sending Message");
  
  sim.println("AT+CMGF=1");    
  delay(1000);
  //Serial.println ("Set SMS Number");
  sim.println("AT+CMGS=\"" + number + "\"\r"); 
  delay(1000);




  
  sim.println("Humidity: %");
  sim.println(h);
  
  sim.println("\n");
  sim.println("Temperature: *C ");
  sim.println(t);
  
  sim.println("\n");
  sim.println("Latitude: ");
  sim.println(lattitude);
  sim.println("\n");
  sim.println("Longitude: ");
  sim.println(longitude);
  delay(1000);


  
  sim.println((char)26);
  delay(1000);
  _buffer = _readSerial();
}



String _readSerial() {
  _timeout = 0;
  while  (!sim.available() && _timeout < 12000  )
  {
    delay(13);
    _timeout++;
 }
  if (sim.available()) {
    return sim.readString();
  }
}
















